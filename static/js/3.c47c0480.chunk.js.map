{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/MessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogsItems","active","messages","message","DialogItem","props","path","id","react_default","a","createElement","className","s","dialog","NavLink","to","name","Message","maxLenghtCreator40","maxLenghtCreator","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","reqField","placeholder","Dialogs","state","dialogsPage","dialogsElements","map","d","Dialogs_DialogItem_DialogItem","key","messagesElements","m","Dialogs_Message_Message","isAuth","Redirect","MessageForm","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","_React$Component","Object","inherits","_super","createSuper","classCallCheck","this","apply","arguments","createClass","value","React"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,8BAAAC,OAAA,wBAAAC,SAAA,0BAAAC,QAAA,2HCWHC,EARI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEX,QACtCO,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASC,GAAIT,GAAOD,EAAMW,QCDnBC,EAJC,SAACZ,GACb,OAAOG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEC,QAASR,EAAMF,qDCExCe,EAAqBC,YAAiB,IAiB3BC,EAFUC,YAAU,CAAEC,KAAM,uBAAlBD,CAbF,SAAChB,GACtB,OACEG,EAAAC,EAAAC,cAAA,QAAMa,SAAUlB,EAAMmB,cACpBhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAAqBF,KAAK,iBAAiBc,YAAY,wBAE1GtB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0BCmBOqB,EA3BC,SAAC1B,GAEb,IAAI2B,EAAQ3B,EAAM4B,YAEdC,EAAkBF,EAAMjC,QAAQoC,IAAI,SAAAC,GAAC,OAAI5B,EAAAC,EAAAC,cAAC2B,EAAD,CAAYrB,KAAMoB,EAAEpB,KAAMsB,IAAKF,EAAE7B,GAAIA,GAAI6B,EAAE7B,OACpFgC,EAAmBP,EAAM9B,SAASiC,IAAI,SAAAK,GAAC,OAAIhC,EAAAC,EAAAC,cAAC+B,EAAD,CAAStC,QAASqC,EAAErC,QAASmC,IAAKE,EAAEjC,OAKnF,OAAqB,IAAjBF,EAAMqC,OACClC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAU5B,GAAI,WAIrBP,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEb,SACdS,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,cACbkC,GAEL1B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEV,UACdM,EAAAC,EAAAC,cAAA,WAAM6B,GACN/B,EAAAC,EAAAC,cAACkC,EAAD,CAAkBrB,SAdV,SAACsB,GACjBxC,EAAMyC,YAAYD,EAAOE,8DCV7BC,EAA6B,SAAChB,GAAD,MAAY,CAC3CU,OAAQV,EAAMiB,KAAKP,gBCgBNQ,sBACXC,YAfkB,SAACnB,GACnB,MAAO,CACHC,YAAaD,EAAMC,cAGF,SAACmB,GACtB,MAAO,CACHN,YAAa,SAACC,GACVK,EAASC,YAAmBN,QDPR,SAACO,GAAc,IACvCC,EADuC,SAAAC,GAAAC,OAAAC,EAAA,EAAAD,CAAAF,EAAAC,GAAA,IAAAG,EAAAF,OAAAG,EAAA,EAAAH,CAAAF,GAAA,SAAAA,IAAA,OAAAE,OAAAI,EAAA,EAAAJ,CAAAK,KAAAP,GAAAI,EAAAI,MAAAD,KAAAE,WAAA,OAAAP,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAjB,IAAA,SAAA4B,MAE3C,WACE,OAAKJ,KAAKzD,MAAMqC,OACTlC,EAAAC,EAAAC,cAAC4C,EAAcQ,KAAKzD,OADIG,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAU5B,GAAI,eAHJwC,EAAA,CACbY,IAAMb,WAUtC,OAHoCH,YAAQH,EAARG,CAAoCI,ICK3DL,CAGbnB","file":"static/js/3.c47c0480.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Wigs\",\"dialogsItems\":\"Dialogs_dialogsItems__2kJ0V\",\"active\":\"Dialogs_active__193jy\",\"messages\":\"Dialogs_messages__1Nvmu\",\"message\":\"Dialogs_message__1fPdU\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","\r\nimport React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLenghtCreator, reqField } from '../../utils/validators/validator';\r\nimport Textarea from '../common/FormsControl/Textarea';\r\n\r\nlet maxLenghtCreator40 = maxLenghtCreator(40)\r\n\r\nconst addMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} validate={[reqField, maxLenghtCreator40]} name=\"newMessageBody\" placeholder='Enter your message' />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({ form: 'addMessageFormRedux' })(addMessageForm)\r\n\r\nexport default MessageReduxForm;\r\n\r\n/*    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component=\"textarea\" name=\"newMessageBody\" placeholder='Enter your message' />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n    */\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from 'react-router';\r\nimport MessageReduxForm from './MessageForm';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n    if (props.isAuth === false) {\r\n        return <Redirect to={\"/login\"} />\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <MessageReduxForm onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  let conectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n\r\n  return conectedAuthRedirectComponent;\r\n}","import { sendMessageCreator, } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);;"],"sourceRoot":""}